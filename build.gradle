plugins {
    id "java"
    id "application"
}

repositories{
    mavenLocal()
    mavenCentral()
}

sourceSets {
  main.java.srcDirs = ["src"]
  main.resources.srcDirs = ["resource"]
  test.java.srcDirs = ["test"]
}

mainClassName = "com.test.Run"
group = "com.test"
version = "1.0.0"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


dependencies{

    def versionJunit = "5.8.1"
    def versionLog4j = "2.14.1"

    implementation "org.apache.logging.log4j:log4j-api:${versionLog4j}"
    implementation "org.apache.logging.log4j:log4j-core:${versionLog4j}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versionJunit}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${versionJunit}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versionJunit}"
}

jar {
    manifest {
        attributes "Main-Class": "${mainClassName}"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE 
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

/* 
    // ======================  Override task jar into a seperated task
    task buildJar(type: Jar) {
        manifest {
            attributes "Main-Class": "${mainClassName}"
        }
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE 
        archiveBaseName = "${rootProject.name}"
        from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }
*/


test {
    testLogging.events = ["passed", "skipped", "failed"]
    useJUnitPlatform()
}
